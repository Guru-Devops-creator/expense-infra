pipeline {
    agent {
        label 'Agent-1'
    }
    options {
        timeout(time:30 , unit:'MINUTES')
        disableConcurrentBuilds()
    }
    parameters {
        
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Actions')

    }
    stages {
        stage('Init and plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                sh """
                    cd 10-vpc
                    terraform init -reconfigure
                    terraform plan -out=tfplan
                """
                }
            }
        }
    stage ('Trigger SG') {
            when {
                expression { params.ACTION == 'apply' }
            }
            steps{
                build job: '10-sg', parameters: [string(name: 'ACTION', value: "apply")], wait: false
            }
        }
    
       
    //     stage('Deploy') {
    //         steps {
    //             sh "echo This is deploy"
                
    //         }
    //     }
    //     stage ('print params') {
    //         steps {
    //             echo "Hello ${params.PERSON}"

    //             echo "Biography: ${params.BIOGRAPHY}"

    //             echo "Toggle: ${params.TOGGLE}"

    //             echo "Choice: ${params.CHOICE}"

    //             echo "Password: ${params.PASSWORD}"
    //         }
    //     }
    //     stage('Approval') {
    //         input {
    //             message "Should we continue?"
    //             ok "Yes, we should."
    //             submitter "alice,bob"
    //             parameters {
    //                 string(name: 'PERSON', defaultValue: 'Mr Jenkins', description: 'Who should I say hello to?')
    //             }
    //         }
    //         steps {
    //             echo "Hello, ${PERSON}, nice to meet you."
    //         }
    //     }
    }
    post {
        always {
            echo "This section runs always"
            deleteDir()
        }
        success {
            echo " This section runs only when pipeline success"
        }
        failure {
            echo "This section runs when pipeline failed"
        }
    }
}